#!/usr/bin/python3
# COMP3311 21T3 exam ... property finder

import sys
import psycopg2
import re

# define any local helper functions here

### set up some globals

usage = f"Usage: {sys.argv[0]} type maxPrice #beds #baths #cars\n"\
f"type is one of Apartment, House, Townhouse\n"\
"maxPrice is upper bound; #x = exact match; 0 means don't care"

types = ["Apartment", "House", "Townhouse"]
db = None

### process command-line args

argc = len(sys.argv)
if argc < 6:
  print(usage)
  exit(1)
ptype = sys.argv[1]
if not ptype in types:
  print(usage)
  exit(1)
digits = re.compile(r"^\d+$")
for arg in sys.argv[2:5]:
  if not digits.match(arg):
    print(usage)
    exit(1)

maxPrice = int(sys.argv[2])
nbeds = int(sys.argv[3])
nbaths = int(sys.argv[4])
ncars = int(sys.argv[5])

# manipulate database

try:
  conn = psycopg2.connect("dbname=property")
  cur = conn.cursor()
  query = '''select * from properties(%s, %s)'''
  cur.execute(query, [ptype, maxPrice,])
  for tup in cur.fetchall():
    property_id, price, cars_beds_baths, address = tup
    bbc = list(map(int,cars_beds_baths.split(',')))
    if len(bbc) == 2:
      bbc.append(0)
    pbeds = bbc[0]
    pbaths = bbc[1]
    pcars = bbc[2]
    array = [nbeds, nbaths, ncars]
    # print(bbc, array)
    matchProperty = True
    for x in range(3):
      # print(x)
      if array[x] == 0:
        continue
      elif bbc[x] != array[x]:
        matchProperty = False
        break
    if matchProperty:
      print(f"#{property_id}: {address}, {pbeds}br, {pbaths}ba, {pcars}car, ${price}")
    


except Exception as err:
  print("DB error: ", err)
finally:
  if db:
    db.close()

